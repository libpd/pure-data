#N canvas 464 138 552 408 12;
#X text 418 169 (click for details:), f 11;
#X text 42 180 The first argument sets its function:;
#X obj 51 28 canvas;
#X text 98 28 - get canvas information;
#X obj 39 209 canvas dir;
#X text 133 208 - access canvas' directory;
#N canvas 590 86 712 352 dir 0;
#X obj 63 162 canvas dir;
#X obj 63 130 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 86 199 print directory;
#X obj 63 234 openpanel;
#X text 47 46 "canvas dir" sends the canvas directory.;
#X text 235 251 If you do not specify a float as the first argument
\, the default level is "0" (which is the current patch's directory).
, f 62;
#X text 234 117 If used inside an abstraction \, an optional argument
sets the depth level and can query the parent patch's directory \,
or granparent's and so on. This way \, "1" gets the directory of the
parent's patch \, "2" the grandparent's and so on. The depth gets clipped
to the maximum level., f 62;
#X text 234 199 Note that "canvas dir" can be inside any layers of
subpatches inside an abstraction or a patch to get the patch's directory
\, it doesn't matter., f 62;
#X connect 0 0 2 0;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X restore 419 209 pd dir;
#X text 283 346 updated for Pd version 0.50.;
#X obj 39 236 canvas mouse;
#X text 133 235 - access canvas' mouse interaction;
#N canvas 466 155 799 364 mouse 0;
#X text 300 264 If you do not specify a float as the first argument
\, the default level is "0" (which is the current patch's directory).
, f 62;
#X text 65 47 "canvas dir" sends mouse interaction with canvas.;
#X obj 82 116 canvas mouse;
#X obj 163 143 unpack;
#X floatatom 163 171 5 0 0 0 - - -;
#X floatatom 204 171 5 0 0 0 - - -;
#X obj 82 162 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 149 170 x;
#X text 244 171 y;
#X text 43 162 click;
#X obj 173 245 unpack;
#X floatatom 173 273 5 0 0 0 - - -;
#X floatatom 214 273 5 0 0 0 - - -;
#X obj 78 264 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 159 272 x;
#X text 254 273 y;
#X text 39 264 click;
#X obj 78 218 canvas mouse 1;
#X text 299 100 The canvas mouse object gets mouse click and mouse
coordinates when your mouse is interacting with the canvas window.
An optional argument sets the depth level and can query the parent
patch's directory \, or granparent's and so on. This way \, "1" gets
the directory of the parent's patch \, "2" the grandparent's and so
on. The depth gets clipped to the maximum level., f 62;
#X text 299 212 To the left \, the object gets information when interacting
with this window \, but the object below only outputs information when
we interact with the parent patch., f 62;
#X connect 2 0 6 0;
#X connect 2 1 3 0;
#X connect 3 0 4 0;
#X connect 3 1 5 0;
#X connect 10 0 11 0;
#X connect 10 1 12 0;
#X connect 17 0 13 0;
#X connect 17 1 10 0;
#X restore 419 236 pd mouse;
#X text 46 82 In Pd a canvas is the patch's window. This is an experimental
object to query different information on canvases. For now \, only
two functions are available \, but more are on the way., f 61;
#N canvas 689 91 575 531 args 0;
#X obj 125 189 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 125 255 print;
#X text 146 186 <= get arguments;
#X obj 267 357 print;
#X obj 238 273 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 267 272 list a b x;
#X msg 288 301 1 2 3;
#X obj 125 220 canvas-abstraction 100 foo \$0-x \\\$0 \$1 \$2-x;
#X obj 267 326 canvas-abstraction a b x;
#X text 77 411 Above we have the same abstraction where we can set
new arguments with a message (float \, symbol or list). A bang will
output the new argument list. The argument list will show if you close
and reopen this subpatch. If you save the patch \, the new list is
saved with the patch.;
#X text 43 19 "canvas arg" egts and sets the arguments of an abstraction.
;
#X text 46 46 This is useful for managing a variable number of arguments.
When it receives a bang \, canvas args outputs the loaded arguments.
Below there's an abstraction with canvas args as a simple example on
how this works. Note how dollar signs (such as "\$0" \, "\$1" or "\$2-x")
get expanded unless you escape them with a backlash ("\$2-x" may appear
as an unexpanded symbol \, but it actually gets expanded if this abstraction
is called inside another that contains arguments)., f 65;
#X connect 0 0 7 0;
#X connect 4 0 8 0;
#X connect 5 0 8 0;
#X connect 6 0 8 0;
#X connect 7 0 1 0;
#X connect 8 0 3 0;
#X restore 419 263 pd args;
#X obj 39 263 canvas args;
#X text 133 262 - access canvas' arguments;
