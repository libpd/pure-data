#N canvas 80 50 1119 641 12;
#X obj 38 376 netsend;
#X msg 38 218 connect localhost 3000;
#X msg 47 351 send foo \$1;
#X floatatom 47 325 0 0 0 0 - - -;
#X msg 38 298 disconnect;
#X msg 233 351 send foo \$1;
#X msg 216 298 disconnect;
#X msg 216 218 connect localhost 3001;
#X floatatom 38 407 0 0 0 0 - - -;
#X floatatom 216 407 0 0 0 0 - - -;
#X text 713 298 Close the connection;
#X obj 175 599 netreceive;
#X text 84 599 see also:;
#X obj 557 522 netsend 1;
#X text 642 521 (UDP);
#X obj 216 376 netsend -u;
#X text 772 377 creation arguments:;
#X text 840 399 optional -u flag for UDP;
#X text 840 418 optional -b flag for binary;
#X floatatom 233 325 0 0 0 0 - - -;
#X msg 412 298 disconnect;
#X floatatom 412 407 0 0 0 0 - - -;
#X floatatom 429 325 0 0 0 0 - - -;
#X msg 412 218 connect localhost 3002;
#X msg 617 298 disconnect;
#X floatatom 617 407 0 0 0 0 - - -;
#X floatatom 634 325 0 0 0 0 - - -;
#X text 657 195 UDP \, binary;
#X obj 617 376 netsend -u -b;
#X text 452 195 TCP \, binary;
#X text 808 207 Connect to "localhost" port number, f 22;
#X obj 412 376 netsend -b;
#X msg 617 218 connect localhost 3003;
#X text 34 98 By default the messages are ASCII text messages compatible
with Pd (i.e. \, numbers and symbols terminated with a semicolon --
the "FUDI" protocol). The "-b" creation argument specifies binary messages
instead \, which appear in Pd as lists of numbers from 0 to 255 (You
could use this to send OSC messages \, for example.), f 132;
#X obj 84 407 print backward;
#X obj 479 407 print backward;
#X text 36 450 First outlet is nonzero if connection is open \, zero
otherwise., f 62;
#X obj 283 407 print backward;
#X obj 705 407 print backward;
#X text 36 475 Second outlet outputs messages sent back from netreceive
object. In TCP mode this works for any established connection. In UDP
you have to send at least one message forward through the connection
for backward messages to find their way back., f 121;
#X msg 637 259 connect localhost 3003 3010;
#X text 867 245 an additional port argument;
#X text 867 277 messages sent back from receiver;
#X text 867 261 specifies port number for;
#X text 35 514 An old (pre-0.45) calling convention is provided for
compatibility \, a single float argument "0" or "1" for TCP or UDP
respectively:, f 68;
#X text 900 599 updated for Pd version 0.50.;
#X text 35 36 The netsend object connects to another machine over the
network for sending TCP ("stream") or UDP ("datagram") messages. An
outlet reports whether the connection is open or not. A connection
request should specify the name or IP address of the other host and
the port number. There should be a "netreceive" on the remote host
with a matching port number., f 132;
#X text 147 12 netsend -- send Pd messages over a network;
#X text 35 554 As of 0.50+ \, Pd supports IPv6 addresses \, netsend
-u (UDP) is fully "connectionless" and no longer closes if no one receives
a UDP message \, and netsend (TCP) has a settable connect timeout which
defaults to 10 seconds., f 115;
#X msg 425 247 timeout 3000;
#X text 520 242 TCP connect timeout (ms), f 13;
#N canvas 157 82 527 376 IP 0;
#X obj 53 332 netsend -u;
#X msg 149 260 disconnect;
#X text 326 191 IPv4 multicast;
#X text 304 223 IPv6 multicast;
#X msg 253 296 send \$1;
#X floatatom 253 261 5 0 0 0 - - -;
#X msg 133 224 connect ff00::114 3005;
#X msg 113 192 connect 239.200.200.200 3005;
#X msg 95 156 connect ::1 3005;
#X msg 76 122 connect 127.0.0.1 3005;
#X msg 53 88 connect localhost 3005;
#X text 225 87 IPv4 messages (default);
#X text 246 121 IPv4 messages;
#X text 228 155 IPv6 messages;
#X text 20 16 As of Pd 0.50+ \, netsend supports sending IPv6 and multicast
messages. Also \, it will try to detect the IP version based on the
given address or hostname. Hostname resolution favors IPv4 results
for backwards compatibility., f 70;
#X obj 343 334 netsend;
#X msg 356 304 send \$1;
#X floatatom 356 280 5 0 0 0 - - -;
#X msg 343 253 connect ::1 3005;
#X connect 1 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 0 0;
#X connect 9 0 0 0;
#X connect 10 0 0 0;
#X connect 16 0 15 0;
#X connect 17 0 16 0;
#X connect 18 0 15 0;
#X restore 873 559 pd IP version and multicast;
#X text 447 273 don't set it too low!;
#X msg 634 351 1 2 3 \$1;
#X msg 429 351 send 1 2 3 \$1;
#X text 707 351 lists work like "send" (Pd 0.50+);
#X text 33 160 The Pd distribution includes "pdsend" and "pdreceive"
standalone programs that work with netsend/netreceive in FUDI mode.
, f 122;
#X text 80 195 TCP \, FUDI;
#X text 266 195 UDP \, FUDI;
#X connect 0 0 8 0;
#X connect 0 1 34 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 0 0;
#X connect 5 0 15 0;
#X connect 6 0 15 0;
#X connect 7 0 15 0;
#X connect 15 0 9 0;
#X connect 15 1 37 0;
#X connect 19 0 5 0;
#X connect 20 0 31 0;
#X connect 22 0 54 0;
#X connect 23 0 31 0;
#X connect 24 0 28 0;
#X connect 26 0 53 0;
#X connect 28 0 25 0;
#X connect 28 1 38 0;
#X connect 31 0 21 0;
#X connect 31 1 35 0;
#X connect 32 0 28 0;
#X connect 40 0 28 0;
#X connect 49 0 31 0;
#X connect 53 0 28 0;
#X connect 54 0 31 0;
