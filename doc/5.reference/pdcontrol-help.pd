#N canvas 632 23 537 520 12;
#X obj 78 32 pdcontrol;
#X text 157 32 -- communicate with pd and/or this patch;
#X obj 49 247 pdcontrol;
#X text 276 208 open a URL in a browser;
#X msg 74 209 browse http://msp.ucsd.edu;
#X text 286 465 updated for Pd version 0.51.;
#X msg 50 169 version;
#X text 111 169 outputs a list with Pd's version (major \, minor \,
bugfix);
#X text 211 267 More examples:;
#N canvas 259 45 717 246 dir 0;
#X obj 82 140 pdcontrol;
#X obj 82 167 print;
#X msg 81 47 dir;
#X text 121 47 get directory this patch is in;
#X msg 97 75 dir 0 ../3.audio-examples/A00.intro.pd, f 32;
#X text 353 76 Optional argument to specify this patch (0) \, owning
patch (1) \, its own owner (2) \, and so on \, and optionally also
a filename relative to the patch's directory. (Ownership number is
silently reduced if owners don't exist \, so here anything greater
than zero is ignored.), f 40;
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X connect 4 0 0 0;
#X restore 233 297 pd dir;
#X text 287 297 - query for owning directory;
#N canvas 506 186 641 343 isvisible 0;
#X msg 134 48 isvisible;
#X text 211 42 1 if this window is visible \, 0 if not, f 19;
#X msg 123 221 isvisible;
#N canvas 564 534 495 194 subpatch 0;
#X obj 44 15 inlet;
#X obj 44 97 pdcontrol;
#X msg 153 56 isvisible 1;
#X obj 153 97 pdcontrol;
#X obj 153 148 print subpatch-visibility;
#X text 252 42 You can also check it parent window is visible or not
(this is particularly useful inside abstractions). Hide the parent
window to test it., f 30;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X restore 123 256 pd subpatch;
#X obj 134 93 pdcontrol;
#X obj 134 130 print isvisible;
#X text 122 170 An optional argument specifies the level: this window
(0) \, owning window (1) and so on.;
#X text 213 255 <= open and shut to test "isvisible" message., f 45
;
#X connect 0 0 4 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X restore 191 325 pd isvisible;
#X text 287 324 - query for visible status;
#N canvas 776 152 581 338 editmode 0;
#X obj 156 174 pdcontrol;
#X msg 156 145 editmode;
#X obj 90 136 key;
#X obj 90 194 spigot;
#X obj 90 163 t f b;
#X obj 156 201 == 0;
#X floatatom 90 228 5 0 0 0 - - -;
#X obj 396 167 pdcontrol;
#X obj 330 129 key;
#X obj 330 187 spigot;
#X obj 330 156 t f b;
#X obj 396 194 == 0;
#X floatatom 330 221 5 0 0 0 - - -;
#X msg 396 138 editmode 1;
#X text 80 39 Here we use the editmode message to filter the output
of [key] so they only go through if the patch window is in run mode.
And optional argument specifies the level: this window (0) \, owning
window (1) and so on.;
#X text 315 255 change the edit status of the parent window to test
this., f 29;
#X text 63 258 change the edit status of this window to test this.
, f 29;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 2 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 4 1 1 0;
#X connect 5 0 3 1;
#X connect 7 0 11 0;
#X connect 8 0 10 0;
#X connect 9 0 12 0;
#X connect 10 0 9 0;
#X connect 10 1 13 0;
#X connect 11 0 9 1;
#X connect 13 0 7 0;
#X restore 198 355 pd editmode;
#X text 287 354 - query for edit mode status;
#N canvas 795 166 602 389 args 0;
#X obj 56 220 print;
#X text 114 151 <= get arguments;
#X obj 56 185 pdcontrol-abs foo 100 \$0-x \\\$0 \$1 \$2-x;
#X text 72 27 This is useful for managing a variable number of arguments.
When it receives the 'args' message \, [pdcontrol] outputs the loaded
arguments. An optional argument specifies this patch (0) \, owning
patch (1) \, its own owner (2) \, and so on. (Ownership number is silently
reduced if owners don't exist \, so here anything greater than zero
is ignored.), f 65;
#X text 62 280 Above there's a simple abstraction to show how it works.
Note how dollar signs (such as "\$0" \, "\$1" or "\$2-x") get expanded
unless you escape them with a backlash ("\$2-x" may appear as an unexpanded
symbol \, but it actually gets expanded if this abstraction is called
inside another that contains arguments)., f 71;
#X msg 56 151 args;
#X obj 358 225 print;
#X msg 358 156 args;
#X obj 358 190 pdcontrol-abs;
#X text 402 152 outputs a bang if there are no arguments., f 23;
#X connect 2 0 0 0;
#X connect 5 0 2 0;
#X connect 7 0 8 0;
#X connect 8 0 6 0;
#X restore 227 384 pd args;
#X text 287 385 - query for arguments;
#X obj 49 280 print version:;
#N canvas 329 118 977 394 realizedollar 0;
#X obj 85 212 pdcontrol;
#X symbolatom 85 250 10 0 0 0 - - -;
#X obj 728 126 pdcontrol-abs;
#X symbolatom 728 164 10 0 0 0 - - -;
#X text 43 21 The realizedollar message allows you to expand a symbol
that contains dollarsigns (\$0 \, \$1 \, \$2 \, etc...) as part of
it. This way \, it gets expanded according to the unique patch number
ID (\$0) or arguments (\$1 \, \$2 \, etc..). It takes the symbol to
expand as an obrigatory argument. An optional argument specifies this
patch (0) \, owning patch (1) \, its own owner (2) \, and so on. (Ownership
number is silently reduced if owners don't exist \, so here anything
greater than zero is ignored.);
#X obj 251 212 pdcontrol-abs hi;
#X symbolatom 251 253 10 0 0 0 - - -;
#X symbolatom 550 162 10 0 0 0 - - -;
#X obj 550 121 pdcontrol-abs;
#X text 47 300 The first example above \, to the left \, expands \$0
according to this patch's ID number. In the on to the right \, we can
see it expands according to the the 1st argument of the abstraction.
, f 61;
#X text 520 20 Below to the left \, we expand value of "\$0" inside
the abstraction \, and the to the right \, the abstraction expands
according to the parent patch's "\$0" value.;
#X symbolatom 555 228 10 0 0 0 - - -;
#X msg 555 257 realizedollar \$1;
#X symbolatom 555 319 10 0 0 0 - - -;
#X obj 555 288 pdcontrol-abs;
#X text 697 231 Note that when you type a symbol that contains dollarsigns
into a symbol box \, the $ characters get escaped by \ and you need
to expand them if needed with the realizedollar method. Try typng "\$0-x"
for instance., f 33;
#X msg 85 176 realizedollar \\\$0-x;
#X msg 251 176 realizedollar \\\$1-there;
#X msg 550 85 realizedollar \\\$0-x;
#X msg 728 90 realizedollar \\\$0-x 1;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 5 0 6 0;
#X connect 8 0 7 0;
#X connect 11 0 12 0;
#X connect 12 0 14 0;
#X connect 14 0 13 0;
#X connect 16 0 0 0;
#X connect 17 0 5 0;
#X connect 18 0 8 0;
#X connect 19 0 2 0;
#X restore 164 414 pd realizedollar;
#X text 287 413 - expand dollar symbols;
#X text 43 71 pdcontrol has several functionalitites. you can query
for the current Pd version \, ask Pd to open a link for you and get
some useful information from the patch or its parent \, like: owning
directory \, arguments \, its visible and edit status. It also allows
you to expand symbols with dollar signs., f 65;
#X connect 2 0 17 0;
#X connect 4 0 2 0;
#X connect 6 0 2 0;
