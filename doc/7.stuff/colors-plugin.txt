# this is an example of a color plugin for pure data (saved as a .tcl file)
array set ::pd_colors {
canvas_fill "#FF8800"
gop_box "white"
obj_box_text "green"
msg_box_text "light blue"
comment "white"
selected "yellow"
obj_box_outline_broken "blue"
obj_box_outline "#0B8100"
msg_box_outline "#0B8100"
msg_box_fill "blue"
obj_box_fill "#0B8100"
signal_cord "#0B8100"
msg_cord "#0B8100"
msg_iolet "white"
signal_iolet "#99c0ff"
graph_outline "blue"
selection_rectangle "light green"
txt_highlight "black"
graph_text "purple"
array_name "green"
array_values "blue"
atom_box_fill "black"
atom_box_text "red"
atom_box_label "steel blue"
atom_box_outline "red"
text_window_fill "black"
text_window_text "white"
text_window_highlight "green"
text_window_cursor "green"
pdwindow_fill "#000"
pdwindow_fatal_text "#D00"
pdwindow_fatal_highlight "#FFE0E8"
pdwindow_error_text "#D00"
pdwindow_post_text "deep sky blue"
pdwindow_debug_text "green"
helpbrowser_fill "#000"
helpbrowser_text "deep sky blue"
helpbrowser_highlight "red"
}
set ::pd_colors(txt_highlight_front) $::pd_colors(selected)

# how to set individual colors
#set ::pd_colors(msg_box_fill) "white"
#set ::pd_colors(obj_box_fill) "white"

#random colors for everything
#proc ::pdtk_canvas::get_color {type {window 0}} {
#	return [format #%06x [expr {int(rand() * 0xFFFFFF)}]]
#}